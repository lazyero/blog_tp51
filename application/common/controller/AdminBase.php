<?php

namespace app\common\controller;

use think\Controller;
/**
 * 
 */
class AdminBase extends Controller
{
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        if (!session('?admin_id')) {
            $this->redirect('Syslogin/login');
        }
        $this->checkAuth();//操作权限验证
        $this->getNavHtml(); //输出HTML导航
        $this->getGroup();
    }

    /**
     * [checkAuth 权限检查]
     * @Author   lzy
     * @DateTime 2018-06-06T10:53:50+0800
     * @return   [type]                   [description]
     */
    protected function checkAuth()
    {	
    	$group_id = session('group_id');
    	//获取当前控制器和方法名称
        $controller = request()->controller();
        $action     = request()->action();
        //超级管理组所有成员有所有权限，跳过验证   
        if ($group_id != 1 &&  !$this->check($controller . '/' . $action, $group_id)) {
            $this->error('没有权限');
        }
    }
    /**
     * [check 当前操作验证权限]
     * @Author   lzy
     * @DateTime 2018-06-06T10:53:23+0800
     * @param    [type]                   $name     [当前操作值 控制器/方法]
     * @param    [type]                   $group_id [管理组id]
     * @return   [type]                             [description]
     */
    protected function check($name,$group_id){
		//当前权限组授权的操作值
        $rules = model('AuthGroup')->where(['id'=>$group_id])->value('rules');
        $authList = model('AuthRule')->where(['id'=>['in',$rules]])->column('name');
        //当前操作是否是其权限组内的操作
        if(!in_array_case($name,$authList)){ //in_array_case不区分大小写的in_array
            return false;
        }
        return true;
    }
    /**
     * 输出权限组
     */
    protected function getGroup()
    {
        $group_info = model('AuthGroup')->column('title', 'id');
        $this->assign('group_info',$group_info);
    }
    /**
     * 取得后台菜单的Html形式
     */
    protected final function getNavHtml() {
        $_menu = $this->getMenu();
        $top_nav = '';
        $left_nav = '';
        foreach ($_menu as $key => $value) {
            $top_nav .= '<li data-param="' . $key . '"><a href="javascript:void(0);">' . $value['title'] . '</a></li>';
            $left_nav .= '<div id="admincpNavTabs_'. $key .'" class="nav-tabs">';
            if (!empty($value['child'])) {
                foreach ($value['child'] as $ke => $val) {
                    if (!empty($val['child'])) {
                        $icon = $val['icon']?$val['icon']:'layui-icon-app';
                        $left_nav .= '<dl><dt><a href="javascript:void(0);"><span class="layui-icon '.$icon.'"></span><h3>' . $val['title'] . '</h3></a></dt>';
                        $left_nav .= '<dd class="sub-menu"><ul>';
                        foreach ($val['child'] as $k => $v) {
                            $left_nav .= '<li><a href="javascript:void(0);" data-param="' . $key . '|' . $k .'|' .url($v['name']) .'">' . $v['title'] . '</a></li>';
                        }

                        $left_nav .= '</ul></dd></dl>';
                    }
                }
            }
            $left_nav .= '</div>';
        }
        $this->assign('top_nav',$top_nav);
        $this->assign('left_nav',$left_nav);
    }

    /**
     * [getMenu 获取侧边栏菜单]
     * @Author   lzy
     * @DateTime 2018-06-06T13:52:17+0800
     * @return   [type]                   [description]
     */
    protected function getMenu()
    {
        $group_id = session('group_id');
        $auth_rule_list = model('Auth_rule')->where('status', 1)->order('sort desc,id asc')->select();
        $rules = explode(',',model('AuthGroup')->where(['id'=>$group_id])->value('rules'));
        foreach ($auth_rule_list as $value) {
            if ($group_id == 1 || in_array($value['id'],$rules)) {  //仅当前菜单的id存在权限中才装载
                $menu[] = $value;
            }
        }
        // $menu = !empty($menu) ? list_to_tree($menu,'id','pid','child') : [];
        //递归菜单
        $menu = !empty($menu) ? tree_list($menu) : [];
        return $menu;
    }
}